<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- Inherit defaults from Spring Boot -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.15</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.example</groupId>
	<artifactId>drain-java</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>drain-java</name>
	<description>Demo project for Spring Boot</description>

	<!-- Properties -->
	<properties>
		<java.version>1.8</java.version>
		<!-- Maven Compiler Plugin Setting -->

		<!-- 배포 대상의 디렉토리 경로 설정 -->
		<deploy.target.dir>C:/apps/drain-java</deploy.target.dir>

		<!-- 의존성 라이브러리 버전 별도 관리 -->
		<log4j2.v>3.0.0</log4j2.v>
		<ini4j.v>0.5.4</ini4j.v>
		<gson.v>2.10.1</gson.v>
	</properties>

	<!-- Add typical dependencies for a web application -->
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- lombok -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<!-- Log4j2 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
			<version>${log4j2.v}</version>
		</dependency>
		<!-- ini4j -->
		<dependency>
			<groupId>org.ini4j</groupId>
			<artifactId>ini4j</artifactId>
			<version>${ini4j.v}</version>
		</dependency>
		<!-- GSON -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson.v}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- 애플리케이션 빌드를 위해 필요한 플러그인 설정  -->

			<!-- 자바 버전 및 컴파일 옵션 지정 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>

			<!-- install시, test 스킵 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skipTests>true</skipTests>
				</configuration>
			</plugin>

			<!-- 이전 빌드 결과물 제거 및 항상 새로운 빌드 결과물 생성 보장 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<executions>
					<execution>
						<id>clean-target</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
						<configuration>
							<filesets>
								<fileset>
									<directory>${deploy.target.dir}</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- jar 파일로 패키징 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<outputDirectory>${deploy.target.dir}</outputDirectory>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<packageName>com.example.drainjava</packageName>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>
								com.example.drainjava.DrainJavaApplication
							</mainClass>
						</manifest>
					</archive>
				</configuration>
			</plugin>

			<!-- 의존성 관리 (별도 lib 에 복사)  -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>install</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>
								${deploy.target.dir}/lib
							</outputDirectory>

							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<!--
                                lombok과 사용하지 않는 jar파일들은 복사하지 않음
                                lombok은 프로그램 개발시에만 필요함
                            -->
							<excludeArtifactIds>
								lombok
							</excludeArtifactIds>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- resource 복사  -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-workflow</id>
						<phase>install</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>${project.basedir}/src/main/ext</directory>
								</resource>
							</resources>
							<outputDirectory>${deploy.target.dir}/ext</outputDirectory>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
